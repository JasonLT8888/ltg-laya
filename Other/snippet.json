{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"gen code": {
		"prefix": "__uimediator",
		"body": [
		  "import BaseUIMediator from \"../../LTGame/UIExt/FGui/BaseUIMediator\";",
		  "import ${1:example} from \"../../ui/Main/${1:example}\";",
		  "",
		  "export default class ${1:example}Mediator extends BaseUIMediator<${1:example}> {",
		  "",
		  "    private static _instance: ${1:example}Mediator;",
		  "    public static get instance(): ${1:example}Mediator {",
		  "        if (this._instance == null) {",
		  "            this._instance = new ${1:example}Mediator();",
		  "            this._instance._classDefine = ${1:example};",
		  "        }",
		  "        return this._instance;",
		  "    }",
		  "",
		  "    _OnShow() {",
		  "        super._OnShow();",
		  "        // your code",
		  "    }",
		  "",
		  "}"
		],
		"description": "gen code"
	  }
}
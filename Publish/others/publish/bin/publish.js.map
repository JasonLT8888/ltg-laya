{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Config/EFileType.ts","webpack:///./src/Pack/EPackResolveType.ts","webpack:///./src/Pack/LTPackNode.ts","webpack:///./src/Pack/PublishHandler.ts","webpack:///./src/Pack/SubpackHelper.ts","webpack:///./src/PublishProject.ts","webpack:///./src/Utils/LTUtils.ts","webpack:///./src/Utils/StringEx.ts","webpack:///external \"child_process\"","webpack:///external \"colors\"","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"process\"","webpack:///external \"uglify-es\""],"names":[],"mappings":"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","file":"publish.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/PublishProject.ts\");\n","export enum EFileType {\r\n\r\n    NotExist = 0,\r\n    Dir,\r\n    File\r\n\r\n}","export enum EPackResolveType {\r\n\r\n    /**\r\n     * 自动生成game.js,配置json等\r\n     */\r\n    AutoSearch,\r\n    /**\r\n     * 全打入包内,不生成game.js,也不生成json等\r\n     */\r\n    AllIn,\r\n    /**\r\n     * 全放cdn,不生成game.js,也不生成json等\r\n     */\r\n    AllOut\r\n\r\n}","export class LTPackNode {\r\n\r\n    /**\r\n     * 完整路径\r\n     */\r\n    public fullPath: string;\r\n\r\n    /**\r\n     * \r\n     */\r\n    public isNode: boolean;\r\n\r\n    /**\r\n     * 大小\r\n     */\r\n    public size: number;\r\n\r\n    /**\r\n     * 父节点\r\n     */\r\n    public parent: LTPackNode;\r\n    /**\r\n     * 子节点\r\n     */\r\n    public childs: LTPackNode[];\r\n\r\n    constructor() {\r\n        this.childs = [];\r\n        this.size = 0;\r\n    }\r\n}","import * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport * as process from 'process';\r\nimport * as colors from 'colors';\r\nimport { IPackConfig } from 'Pack/IPackConfig';\r\nimport { LTUtils } from 'Utils/LTUtils';\r\nimport { SubpackHelper } from './SubpackHelper';\r\nimport StringEx from 'Utils/StringEx';\r\n\r\nexport class PublishHandler {\r\n\r\n    private _platformStr: string;\r\n\r\n    private _keepPlatforms = {\r\n        \"wx\": [\r\n            \"project.config.json\"\r\n        ],\r\n        \"tt\": [\r\n            \"project.config.json\"\r\n        ],\r\n        \"qq\": [\r\n            \"project.config.json\"\r\n        ]\r\n    }\r\n\r\n    private _keepFiles: string[];\r\n    private _useCompress: boolean;\r\n\r\n    private _workPath: string;\r\n    private _releasePath: string;\r\n    private _templatePath: string;\r\n    private _binPath: string;\r\n    private _cdnPath: string;\r\n    private _packConfig: IPackConfig;\r\n\r\n    constructor(platformStr: string, useCompress: boolean = true) {\r\n        this._platformStr = platformStr;\r\n        this._useCompress = useCompress;\r\n    }\r\n\r\n    public Start() {\r\n        let startTime = Date.now();\r\n\r\n        console.log(\"开始发布\", colors.green(this._platformStr));\r\n        this._InitAll();\r\n        this._CheckRelease();\r\n        this._CopyTemplate();\r\n        this._CopyBin();\r\n\r\n        // 再次提示cdn\r\n        console.log((\"注意cdn资源,需要拷贝到服务器:\" + this._cdnPath).bgRed);\r\n\r\n        let endTime = Date.now();\r\n        let passTime = ((endTime - startTime) / 1000).toFixed(2);\r\n        console.log(\"发布完成\", this._releasePath.green);\r\n        console.log(\"总共耗时 \" + passTime.green + \" 秒\");\r\n    }\r\n\r\n    private _CopyBin() {\r\n        // res\r\n        let targetPath = path.join(this._releasePath, \"./res/\");\r\n        LTUtils.DeleteDir(targetPath);\r\n\r\n        let srcResPath = path.join(this._binPath, \"./res/\");\r\n        let cdnPath = path.join(this._cdnPath, \"./res/\")\r\n        // 分包检测\r\n        let subpackHelper = new SubpackHelper(srcResPath, this._packConfig);\r\n        subpackHelper.single_max_size = this._packConfig.maxSinglePackSize * 1024 * 1024;\r\n        subpackHelper.total_max_size = this._packConfig.maxTotalPackSize * 1024 * 1024;\r\n        subpackHelper.Analyze();\r\n        subpackHelper.Replace(targetPath, cdnPath);\r\n\r\n        this._CopyIndex();\r\n\r\n        console.log(\"bin目录拷贝完成\");\r\n        console.log();\r\n    }\r\n\r\n    private _CopyIndex() {\r\n        // index.js(只拷贝index.js内引用的)\r\n        let indexJsPath = path.join(this._binPath, \"./index.js\");\r\n        let readJs = LTUtils.ReadStrFrom(indexJsPath);\r\n\r\n        if (this._useCompress) {\r\n            console.log(\"当前配置需要压缩js,开始压缩\");\r\n            var startTime = Date.now();\r\n        }\r\n        let cachePath = path.join(this._workPath, \"./temp/\" + this._platformStr + \"/\");\r\n        LTUtils.MakeDirExist(cachePath);\r\n\r\n        let regex = /loadLib\\(\"(.*)\"\\)/gm;\r\n        let str = readJs;\r\n        let m;\r\n        while ((m = regex.exec(str)) !== null) {\r\n            if (m.index === regex.lastIndex) {\r\n                regex.lastIndex++;\r\n            }\r\n            if (m[1]) {\r\n                let fileName = m[1];\r\n                let srcPath = path.join(this._binPath, fileName);\r\n\r\n                // 确保目标路径存在\r\n                let targetPath = path.join(this._releasePath, fileName);\r\n                let lastIndex = targetPath.lastIndexOf(\"\\\\\");\r\n                let dirPath = targetPath.substring(0, lastIndex);\r\n                LTUtils.MakeDirExist(dirPath);\r\n\r\n                if (this._useCompress) {\r\n                    this._DoCacheCompress(fileName, srcPath, cachePath, targetPath);\r\n                } else {\r\n                    fs.copyFileSync(srcPath, targetPath);\r\n                }\r\n            }\r\n        }\r\n\r\n        let targetIndexPath = path.join(this._releasePath, \"./index.js\");\r\n        if (this._useCompress) {\r\n            this._DoCacheCompress(\"index.js\", indexJsPath, cachePath, targetIndexPath);\r\n            let endTime = Date.now();\r\n            let passTime = ((endTime - startTime) / 1000).toFixed(2);\r\n            console.log(\"压缩完成,总共耗时 \" + passTime.green + \" 秒\");\r\n        } else {\r\n            // 拷贝indexjs\r\n            fs.copyFileSync(indexJsPath, targetIndexPath);\r\n\r\n            console.log(\"当前配置无需压缩,直接拷贝所有js文件\");\r\n        }\r\n    }\r\n\r\n    private _DoCacheCompress(fileName: string, srcPath: string, cachePath: string, targetPath: string) {\r\n        // 检测是否已存在\r\n        let srcStat = fs.statSync(srcPath);\r\n        let lastModifyTime = srcStat.mtimeMs;\r\n        let tempPath = path.join(cachePath, fileName);\r\n        let tempStr = LTUtils.ReadStrFrom(tempPath);\r\n        if (StringEx.IsNullOrEmpty(tempStr)) {\r\n            let compressJs = LTUtils.CompressJs(srcPath, targetPath);\r\n            // 创建temp文件\r\n            let cacheObj = {\r\n                fileName: fileName,\r\n                modifyTime: lastModifyTime,\r\n                compressJs: compressJs\r\n            };\r\n            let jsonStr = JSON.stringify(cacheObj);\r\n            LTUtils.WriteStrTo(tempPath, jsonStr);\r\n        } else {\r\n            let readJson = JSON.parse(tempStr);\r\n            let read_fileName = readJson[\"fileName\"];\r\n            let read_modifyTime = readJson[\"modifyTime\"];\r\n            if (fileName == read_fileName && read_modifyTime == lastModifyTime) {\r\n                console.log(\"文件未变动,直接使用缓存文件进行替换\", fileName.green);\r\n                LTUtils.WriteStrTo(targetPath, readJson[\"compressJs\"]);\r\n            } else {\r\n                let compressJs = LTUtils.CompressJs(srcPath, targetPath);\r\n                // 创建temp文件\r\n                let cacheObj = {\r\n                    fileName: fileName,\r\n                    modifyTime: lastModifyTime,\r\n                    compressJs: compressJs\r\n                };\r\n                let jsonStr = JSON.stringify(cacheObj);\r\n                LTUtils.WriteStrTo(tempPath, jsonStr);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _CopyTemplate() {\r\n        LTUtils.CopyDir(this._templatePath, this._releasePath, (fileName) => {\r\n            if (this._keepFiles.indexOf(fileName) >= 0) {\r\n                let targetPath = path.join(this._releasePath, fileName);\r\n                if (fs.existsSync(targetPath)) {\r\n                    console.log(\"检测到已存在\", fileName.green, \"进行保留\");\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        console.log(\"template拷贝完成\");\r\n        console.log();\r\n    }\r\n\r\n    private _CheckRelease() {\r\n        let checkResult = LTUtils.MakeDirExist(this._releasePath);\r\n        if (checkResult) {\r\n            console.log(\"release路径检查通过\");\r\n        } else {\r\n            throw SyntaxError(\"release路径创建失败,请检查权限\");\r\n        }\r\n\r\n        console.log();\r\n    }\r\n\r\n    private _InitAll() {\r\n        this._workPath = process.cwd();\r\n        let configPath = path.join(this._workPath, \"./pack_config/publish.\" + this._platformStr + \".json\");\r\n        if (!LTUtils.IsFileExist(configPath)) {\r\n            console.log(\"当前平台\", this._platformStr, \"不存在打包配置文件\", configPath.red, \"读取默认配置\");\r\n            configPath = path.join(this._workPath, \"./others/config/publish.default.json\");\r\n        }\r\n        let readStr = LTUtils.ReadStrFrom(configPath);\r\n        this._packConfig = JSON.parse(readStr);\r\n        this._useCompress = this._packConfig.compress;\r\n\r\n        this._releasePath = path.join(this._workPath, \"./release/\" + this._platformStr);\r\n        this._templatePath = path.join(this._workPath, \"./others/publish/templates/\" + this._platformStr);\r\n        this._binPath = path.join(this._workPath, \"./bin/\");\r\n        this._cdnPath = path.join(this._workPath, \"./cdn/\" + this._platformStr);\r\n\r\n        console.log(\"release路径\", this._releasePath.green);\r\n        console.log(\"template路径\", this._templatePath.green);\r\n        console.log(\"bin路径\", this._binPath.green);\r\n        console.log(\"cdn路径\", this._cdnPath.green);\r\n\r\n        this._keepFiles = this._keepPlatforms[this._platformStr];\r\n        if (!this._keepFiles) {\r\n            console.log(\"当前平台未配置keepFiles\", this._platformStr);\r\n            this._keepFiles = [];\r\n        }\r\n\r\n        console.log();\r\n    }\r\n\r\n}","import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { LTPackNode } from \"./LTPackNode\";\r\nimport { IPackConfig } from \"Pack/IPackConfig\";\r\nimport { LTUtils } from \"Utils/LTUtils\";\r\nimport { EPackResolveType } from \"Pack/EPackResolveType\";\r\n\r\nexport class SubpackHelper {\r\n\r\n    private _rootPath: string;\r\n    private _rootNode: LTPackNode;\r\n\r\n    public single_max_size = 4 * 1024 * 1024;\r\n    public total_max_size = 4 * 1024 * 1024;\r\n    private _cacheSize: number;\r\n\r\n    private _subpacks: LTPackNode[];\r\n    private _remoteFiles: LTPackNode[];\r\n\r\n    private _packConfig: IPackConfig;\r\n\r\n    constructor(rootPath: string, packConfig: IPackConfig) {\r\n        this._rootPath = rootPath;\r\n        this._packConfig = packConfig;\r\n        this._rootNode = new LTPackNode();\r\n        this._rootNode.fullPath = rootPath;\r\n        this._rootNode.isNode = false;\r\n    }\r\n\r\n    /**\r\n     * 进行分析\r\n     */\r\n    public Analyze() {\r\n        this._AnalyzeDir(this._rootPath, this._rootNode);\r\n        this._CombieNode(this._rootNode);\r\n        let kb = Math.ceil(this._rootNode.size / 1024);\r\n        let mb = kb / 1024;\r\n        console.log(\"资源包:\", this._rootNode.fullPath, \"总共\", kb.toFixed(0) + \"kb (\" + mb.toFixed(2) + \"mb)\");\r\n\r\n        this._subpacks = [];\r\n        this._remoteFiles = [];\r\n        this._cacheSize = 0;\r\n        // 优先进行强制主包\r\n        let upRootPath = path.join(this._rootPath, \"./../\");\r\n        for (let i = 0; i < this._packConfig.forceInPack.length; ++i) {\r\n            let forceMainPack = this._packConfig.forceInPack[i];\r\n            let fullPath = path.join(upRootPath, forceMainPack);\r\n            console.log(\"强制主包\", fullPath.green);\r\n            let fakePack = new LTPackNode();\r\n            fakePack.isNode = false;\r\n            let dirStat = fs.statSync(fullPath);\r\n            fakePack.size = dirStat.size;\r\n            fakePack.fullPath = fullPath;\r\n            this._subpacks.push(fakePack);\r\n            this._cacheSize += fakePack.size;\r\n        }\r\n        this._SplitSubpack(this._rootNode, this._subpacks, this._remoteFiles);\r\n\r\n        kb = Math.ceil(this._cacheSize / 1024);\r\n        mb = kb / 1024;\r\n        console.log(\"拆分子包个数\", this._subpacks.length, \"总子包大小\", kb.toFixed(0) + \"kb (\" + mb.toFixed(2) + \"mb)\");\r\n    }\r\n\r\n    /**\r\n     * 进行包替换\r\n     */\r\n    public Replace(subpackPath: string, cdnPath: string) {\r\n        LTUtils.DeleteDir(cdnPath);\r\n        // 将远程文件放到一个文件夹\r\n        for (let i = 0; i < this._remoteFiles.length; ++i) {\r\n            let remoteFile = this._remoteFiles[i];\r\n            let relativePath = remoteFile.fullPath.replace(this._rootPath, \"\");\r\n            let targetPath = path.join(cdnPath, relativePath);\r\n\r\n            if (remoteFile.isNode) {\r\n                // 拷贝文件\r\n                LTUtils.CopyFile(remoteFile.fullPath, targetPath);\r\n            } else {\r\n                // 拷贝文件夹\r\n                LTUtils.CopyDir(remoteFile.fullPath, targetPath);\r\n            }\r\n\r\n        }\r\n\r\n        LTUtils.DeleteDir(subpackPath);\r\n        // 将子包放到一个文件夹\r\n        for (let i = 0; i < this._subpacks.length; ++i) {\r\n            let subpack = this._subpacks[i];\r\n            if (subpack.isNode) {\r\n                console.log(\"子包检测到单文件,请注意检查\".red, subpack.fullPath);\r\n                continue;\r\n            }\r\n            let relativePath = subpack.fullPath.replace(this._rootPath, \"\");\r\n            let targetPath = path.join(subpackPath, relativePath);\r\n\r\n            LTUtils.CopyDir(subpack.fullPath, targetPath);\r\n\r\n            // 检查有没有game.js,没有则主动创建\r\n            let jsPath = path.join(targetPath, \"./game.js\");\r\n            if (!fs.existsSync(jsPath)) {\r\n                LTUtils.WriteStrTo(jsPath, \"\");\r\n            }\r\n        }\r\n\r\n        // 生成game.json\r\n        let gameJsonPath = path.join(subpackPath, \"./../game.json\");\r\n        let gameJsonStr = fs.readFileSync(gameJsonPath, {\r\n            \"encoding\": \"utf-8\"\r\n        });\r\n        let gameJson = JSON.parse(gameJsonStr);\r\n        let subpacks = [];\r\n        let upRootPath = path.join(this._rootPath, \"./../\");\r\n        for (let i = 0; i < this._subpacks.length; ++i) {\r\n            let subpack = this._subpacks[i];\r\n            if (subpack.isNode) continue;\r\n            let relativePath = subpack.fullPath.replace(upRootPath, \"\");\r\n            let checkRelativePath = relativePath.replace(\"\\\\\", \"/\");\r\n            if (this._packConfig.packType == EPackResolveType.AutoSearch) {\r\n                if (this._packConfig.forceInPack.indexOf(checkRelativePath) >= 0) {\r\n                    console.log(\"强制主包\", checkRelativePath.green);\r\n                } else {\r\n                    subpacks.push({\r\n                        \"name\": relativePath,\r\n                        \"root\": relativePath\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        // 写出game.json文件\r\n        gameJson['subpackages'] = subpacks;\r\n        let outputjson = JSON.stringify(gameJson);\r\n        while (outputjson.indexOf(\"\\\\\\\\\") >= 0) {\r\n            outputjson = outputjson.replace(\"\\\\\\\\\", \"/\");\r\n        }\r\n        fs.writeFileSync(gameJsonPath, outputjson, {\r\n            \"encoding\": \"utf-8\"\r\n        });\r\n\r\n        // 写出subpack.json文件\r\n        let subpackJsonData = [];\r\n        for (let i = 0; i < this._subpacks.length; ++i) {\r\n            let subpack = this._subpacks[i];\r\n            let relativePath = subpack.fullPath.replace(upRootPath, \"\");\r\n            let checkRelativePath = LTUtils.ReplaceAll(relativePath, \"\\\\\", \"/\");\r\n            let packType = this._packConfig.packType == EPackResolveType.AllIn ? 1 : 2;\r\n            if (this._packConfig.forceInPack.indexOf(checkRelativePath) >= 0) {\r\n                packType = 1;\r\n            }\r\n            subpackJsonData.push(\r\n                {\r\n                    \"path\": checkRelativePath,\r\n                    \"pathType\": packType\r\n                }\r\n            );\r\n        }\r\n\r\n        let upSubpackPath = path.join(subpackPath, \"./../\");\r\n        let subpackJsonStr = JSON.stringify(subpackJsonData);\r\n        let subpackJsonPath = path.join(upSubpackPath, \"./subpack.json\");\r\n        fs.writeFileSync(subpackJsonPath, subpackJsonStr, {\r\n            \"encoding\": \"utf-8\"\r\n        });\r\n        console.log(\"输出subpack.json\", subpackJsonPath);\r\n    }\r\n\r\n    private _SplitSubpack(node: LTPackNode, subPacks: LTPackNode[], remoteFiles: LTPackNode[]) {\r\n        let upRootPath = path.join(this._rootPath, \"./../\");\r\n        // 进行包整理\r\n        for (let i = 0; i < node.childs.length; ++i) {\r\n            let child = node.childs[i];\r\n            if (child.isNode) {\r\n                // 散文件\r\n                remoteFiles.push(child);\r\n            } else {\r\n                // 文件夹\r\n                let relativePath = child.fullPath.replace(upRootPath, \"\");\r\n                relativePath = relativePath.replace(\"\\\\\", \"/\");\r\n                let isInForceMainPack = this._packConfig.forceInPack.indexOf(relativePath) >= 0;\r\n                if (!isInForceMainPack) {\r\n                    let isInForceRemote = this._packConfig.forceRemote.indexOf(relativePath) >= 0;\r\n                    if (isInForceRemote || this._packConfig.packType == EPackResolveType.AllOut) {\r\n                        console.log(\"强制远程包\", relativePath.green);\r\n                        remoteFiles.push(child);\r\n                    } else {\r\n                        if (child.size > this.single_max_size) {\r\n                            this._SplitSubpack(child, subPacks, remoteFiles);\r\n                        } else {\r\n                            if (child.size + this._cacheSize < this.total_max_size) {\r\n                                subPacks.push(child);\r\n                                this._cacheSize += child.size;\r\n                            } else {\r\n                                this._SplitSubpack(child, subPacks, remoteFiles);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _CombieNode(node: LTPackNode) {\r\n        for (let i = 0; i < node.childs.length; ++i) {\r\n            let childNode = node.childs[i];\r\n            if (!childNode.isNode) {\r\n                this._CombieNode(childNode);\r\n            }\r\n            node.size += childNode.size;\r\n        }\r\n    }\r\n\r\n    private _AnalyzeDir(currentPath: string, node: LTPackNode) {\r\n        let files = fs.readdirSync(currentPath);\r\n        for (let i = 0; i < files.length; ++i) {\r\n            let fileName = files[i];\r\n            let filePath = path.join(currentPath, fileName);\r\n            let fileStat = fs.statSync(filePath);\r\n            let createNode = new LTPackNode();\r\n            createNode.fullPath = filePath;\r\n            createNode.parent = node;\r\n            node.childs.push(createNode);\r\n            if (fileStat.isDirectory()) {\r\n                createNode.isNode = false;\r\n                this._AnalyzeDir(filePath, createNode);\r\n            } else {\r\n                createNode.isNode = true;\r\n                createNode.size = fileStat.size;\r\n            }\r\n        }\r\n    }\r\n\r\n}","import * as process from 'process';\r\nimport { PublishHandler } from 'Pack/PublishHandler';\r\n\r\nclass Main {\r\n\r\n    constructor() {\r\n        let platformPath = this._GetParam(\"-p\");\r\n        if (platformPath == null) {\r\n            console.log(\"需要传入-p 平台参数\");\r\n            return;\r\n        }\r\n\r\n        let useCompress = this._GetParam(\"-c\") == \"true\" ? true : false;\r\n\r\n        new PublishHandler(platformPath, useCompress).Start();\r\n    }\r\n\r\n    private _GetParam(paramName: string): string {\r\n        let paramIndex = process.argv.indexOf(paramName);\r\n        if (paramIndex < 0) return null;\r\n        return process.argv[paramIndex + 1];\r\n    }\r\n\r\n}\r\n\r\nnew Main();","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as uglify_es from 'uglify-es';\r\nimport * as child_process from 'child_process';\r\nimport * as colors from 'colors';\r\nimport { EFileType } from 'Config/EFileType';\r\nimport StringEx from './StringEx';\r\n\r\nexport class LTUtils {\r\n\r\n    static CompressJs(srcPath: string, targetPath: string): string {\r\n        let oldStat = fs.statSync(srcPath);\r\n        let fileName = path.win32.basename(srcPath);\r\n        let srcJs = fs.readFileSync(srcPath, {\r\n            \"encoding\": \"utf-8\"\r\n        });\r\n        let minJs = uglify_es.minify(srcJs);\r\n        if (minJs.error) {\r\n            console.error(\"压缩文件\", fileName, \"出错\", minJs.error);\r\n            throw SyntaxError(\"文件压缩失败,中断发包\");\r\n        }\r\n        this.WriteStrTo(targetPath, minJs.code);\r\n        let newStat = fs.statSync(targetPath);\r\n        let size1 = oldStat.size / 1024;\r\n        let size2 = newStat.size / 1024;\r\n        let rate = size2 / size1;\r\n        let rateStr = \"(\" + (rate * 100).toFixed(2) + \"%)\";\r\n        console.log(\"压缩\", fileName.green, size1.toFixed(2) + \"Kb >>>>>>>> \" + size2.toFixed(2) + \"Kb \" + (rate > 1 ? rateStr.red : rateStr.green));\r\n        return minJs.code;\r\n    }\r\n\r\n    /**\r\n     * 将制定文件转换为es5标准\r\n     * @param srcPath \r\n     */\r\n    static WrapToES5(srcPath: string) {\r\n        let buffer = child_process.execSync(\"babel \");\r\n        console.log(buffer);\r\n    }\r\n\r\n    static ReplaceAll(str: string, replaceStr: string, newStr: string): string {\r\n        let result = str;\r\n        while (result.indexOf(replaceStr) >= 0) {\r\n            result = result.replace(replaceStr, newStr);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static MakeDirExist(dirPath: string): boolean {\r\n        let dirStat = null;\r\n        if (fs.existsSync(dirPath)) {\r\n            dirStat = fs.statSync(dirPath);\r\n        }\r\n        if (!dirStat || !dirStat.isDirectory()) {\r\n            fs.mkdirSync(dirPath, {\r\n                recursive: true\r\n            });\r\n            if (fs.existsSync(dirPath) && fs.statSync(dirPath).isDirectory()) {\r\n                return true;\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static IsFileOrDir(checkPath: string): EFileType {\r\n        if (!fs.existsSync(checkPath)) {\r\n            return EFileType.NotExist;\r\n        }\r\n        let fileStat = fs.statSync(checkPath);\r\n        if (fileStat.isFile()) {\r\n            return EFileType.File;\r\n        }\r\n        return EFileType.Dir;\r\n    }\r\n\r\n    static DeleteDir(targetDir: string) {\r\n        let files = [];\r\n        if (fs.existsSync(targetDir)) {\r\n            files = fs.readdirSync(targetDir);\r\n            for (let i = 0; i < files.length; ++i) {\r\n                let file = files[i];\r\n                let curPath = path.join(targetDir, file);\r\n                if (fs.statSync(curPath).isDirectory()) { // recurse\r\n                    this.DeleteDir(curPath);\r\n                } else {\r\n                    // delete file\r\n                    fs.unlinkSync(curPath);\r\n                }\r\n            }\r\n            fs.rmdirSync(targetDir);\r\n        }\r\n    }\r\n\r\n    static CopyFile(srcFile: string, targetFile: string) {\r\n        let lastIndex = targetFile.lastIndexOf(\"\\\\\");\r\n        let dirPath = targetFile.substring(0, lastIndex);\r\n        LTUtils.MakeDirExist(dirPath);\r\n        fs.copyFileSync(srcFile, targetFile);\r\n    }\r\n\r\n    static CopyDir(srcDir: string, targetDir: string, checkFunc: Function = null) {\r\n        this.MakeDirExist(targetDir);\r\n        let files = fs.readdirSync(srcDir);\r\n        for (let i = 0; i < files.length; ++i) {\r\n            let fileName = files[i];\r\n            if (checkFunc && !checkFunc(fileName)) {\r\n                // true表示继续使用,false表示跳过\r\n                continue;\r\n            }\r\n            let filePath = path.join(srcDir, fileName);\r\n            let targetPath = path.join(targetDir, fileName);\r\n            let fileStat = fs.statSync(filePath);\r\n            if (fileStat.isDirectory()) {\r\n                this.CopyDir(filePath, targetPath, checkFunc);\r\n            } else {\r\n                fs.copyFileSync(filePath, targetPath);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从文件读取内容\r\n     * @param filePath 指定文件路径\r\n     */\r\n    public static ReadStrFrom(filePath: string): string {\r\n        if (!LTUtils.IsFileExist(filePath)) {\r\n            return null;\r\n        }\r\n        let fsStat = fs.statSync(filePath);\r\n        if (fsStat.isDirectory()) {\r\n            return null;\r\n        }\r\n        return fs.readFileSync(filePath, {\r\n            \"encoding\": \"utf-8\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 判断文件是否存在\r\n     * @param filePath \r\n     */\r\n    public static IsFileExist(filePath: string): boolean {\r\n        return fs.existsSync(filePath);\r\n    }\r\n\r\n    /**\r\n     * 获取文件名字\r\n     * @param dirPath \r\n     */\r\n    public static GetDirName(dirPath: string): string {\r\n        let fileType = this.IsFileOrDir(dirPath);\r\n        if (fileType == EFileType.NotExist) {\r\n            return \"\";\r\n        }\r\n        dirPath = StringEx.ReplaceAll(dirPath, '\\\\', '/');\r\n        let splitNames = dirPath.split('/');\r\n        if (dirPath.endsWith('/') || fileType == EFileType.File) {\r\n            return splitNames[splitNames.length - 2];\r\n        }\r\n        return splitNames[splitNames.length - 1];\r\n    }\r\n\r\n    /**\r\n     * 向文件写入内容\r\n     * @param filePath 指定文件路径\r\n     */\r\n    public static WriteStrTo(filePath: string, writeStr: string) {\r\n        let lastIndex = filePath.lastIndexOf(\"\\\\\");\r\n        let dirPath = filePath.substring(0, lastIndex);\r\n        LTUtils.MakeDirExist(dirPath);\r\n        fs.writeFileSync(filePath, writeStr, {\r\n            \"encoding\": \"utf-8\"\r\n        });\r\n    }\r\n}","export default class StringEx {\r\n\r\n    static ReplaceAll(str: string, oldStr: string, newStr: string): string {\r\n        while (str.indexOf(oldStr) >= 0) {\r\n            str = str.replace(oldStr, newStr);\r\n        }\r\n        return str;\r\n    }\r\n\r\n    public static IsNullOrEmpty(str: string): boolean {\r\n        return str == null || str == \"\";\r\n    }\r\n\r\n}","module.exports = require(\"child_process\");","module.exports = require(\"colors\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"uglify-es\");"],"sourceRoot":""}
const PROFILE_PATH = 'project://cocos-runtime.json'; let cpkUitl = require("./src/cpk-util.js"); async function onBuildFinished(event, options) { var isValid = await cpkUitl.gatherInfo(event, options); if (isValid === false) { return; } isValid = await cpkUitl.organizeResources(event); if (isValid === false) { return; } await cpkUitl.pack(); event.reply(); } function genDelPattern(options) { let path = require('path'); let dest = options.dest; let pattern = [path.join(dest, '**/*'),]; return pattern; } function buildStart(options) { let settings = Editor.Profile.load(PROFILE_PATH); options.startSceneAssetBundle = settings.get('packFirstScreenRes') || false; } function genGlobalIgnore() { return [/.*/]; } function handleAdapters(event, options) { let settings = Editor.Profile.load(PROFILE_PATH); options.settings.server = settings.get('tinyPackageServer') || ''; event.reply(); } module.exports = { name: Editor.T('cocos-runtime.platform_name'), platform: 'cocos-runtime', extends: 'runtime', buttons: [Editor.Builder.DefaultButtons.Build], messages: { 'script-build-finished': handleAdapters, 'build-finished': onBuildFinished, }, md5: { globalIgnore: genGlobalIgnore, }, buildStart, delPattern: genDelPattern, settings: Editor.url('packages://cocos-runtime/build-runtime-ui.js') };